#
# The objective of the game is to find all the different
#  combinations of operators that add up 20
#
# I realize its not actually blackjack
require('std')

def swap![Any](i, j)
    def temp = self[i]
    self[i] = self[j]
    self[j] = temp
end

def permutations![Any](opt_k)
    def k = opt_k or 0

    self:len == k then
        yield self
    end else
        for i in k:to(self:len):each
            self:swap!(i, k)

            for val in self:permutations!(k + 1)
                yield val
            end

            self:swap!(i, k)
        end
    end
end

def ops = List:new

for seq in [ &+, &-, &*, &/ ]:permutations!
    ops:push(seq:slice)
end

def hands = List:new

for hand in [ 8 5 3 10 11 ]:permutations!
    hands:push(hand:slice)
end

for hand in [ 8 5 3 10 1]:permutations!
    hands:push(hand:slice)
end

for seq in ops:each
    for hand in hands:each
        let total = hand[0]

        for i, op in seq:each
            total = total:send(op, hand[i + 1])
        end

        total == 20 then
            print(
                hand[0],
                seq[0],
                hand[1],
                seq[1],
                hand[2],
                seq[2],
                hand[3],
                seq[3],
                hand[4])
        end
    end
end
