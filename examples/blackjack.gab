# The objective of the game is to find all the different
#  combinations of operators that add up 20
#
# Yes, its not actually blackjack
:use 'any'
:use 'std/List'
:use 'std/Number'
:use 'std/Record'

def swap![.Record](i, j)
    self[i], self[j] = self[j], self[i]
end

def permutations![.Record](opt_k)
    def k = opt_k or 0
    
    self:len == k then
        yield self
    end else
      i = k
      loop
        self:swap!(i, k)

        for val in self:permutations!(k + 1)
            yield val
        end

        self:swap!(i, k)
        i = i + 1
      until i == self:len end
    end
end

def ops = :list
def hands = :list

for seq in [ &+, &-, &/, &* ]:permutations!
    ops:push!(seq:slice)
end

for hand in [ 8 5 3 10 11 ]:permutations!
    hands:push!(hand:slice)
end

for hand in [ 8 5 3 10 1 ]:permutations!
    hands:push!(hand:slice)
end

for seq in ops:each
    for hand in hands:each
        total = hand[0]
        
        for i, op in seq:each
            total = total:send(op, hand[i + 1])
        end

        total == 20 then
            'Hand: ':print(
                hand[0],
                seq[0],
                hand[1],
                seq[1],
                hand[2],
                seq[2],
                hand[3],
                seq[3],
                hand[4])
        end
    end
end
