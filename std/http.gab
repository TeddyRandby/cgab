:use 'http-parser'
:use 'record'
:use 'socket'

def HTTP {
  port
  socket
}

def http[](opts)
  port = opts or 8080

  status, socket = :socket in
    == .ok or return status

  status = socket:bind(port) in
    == .ok or return status

  status = socket:listen(15) in
    == .ok or return status

  return .ok, { port socket }
end

def serve[HTTP]
  loop
    status, client = self.socket:accept()
    
    status == .ok or return status

    yield client
  end
end

def res[]
  'HTTP/1.1'
end

def code_to_name = {
  [200] = 'OK'
  [400] = 'Bad Request'
  [404] = 'Not Found'
  [500] = 'Internal Server Error'
}

def status[.String](code)
  '{self} {code} {code_to_name:at(code)}\r\n'
end

def header[.String](name, value)
  '{self}{name}: {value}\r\n'
end

def html[.String](body)
  '{self:header('Content-Type', 'text/html')}\r\n{body}'
end
