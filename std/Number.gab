require('num')

impl Number
  def each
    let v = 0

    loop
      yield v
      v = v + 1
    until v == self
  end

  def times(cb)
    let v = 0

    loop
        cb(v)
        v = v + 1
    until v == self
  end

  def to(dest)
    ?dest match
        nil     => { from = 0    to = self }            end
        Number  => { from = self to = dest }            end
        else    => panic('Invalid call to Number:to')   end
  end

  def clamp(arg)
    ?arg match
        ?{ from to } => self< arg.from and arg.from or self > arg.to and arg.to or self end
        else         => panic("Invalid call to Number:clamp") end
  end
end
