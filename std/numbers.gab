:use 'num'

def int.between[](a, b); :float.between(a, b) :floor end

def each[.Number]
  v = 0

  loop
    yield v
    v = v + 1
  until v == self end
end

def times[.Number](cb)
  v = 0

  loop
      cb(v)
      v = v + 1
  until v == self end
end

def from[.Number](src)
  ?src :match {
      [nil]:  do; { from: self }           end
      Number: do; { from: src to: self }   end
  } do; .INVALID_ARGUMENTS:panic end
end

def to[.Number](dest)
  ?dest :match {
      [nil]:  do; { to: self }             end
      Number: do; { from: self to: dest } end
  } do; .INVALID_ARGUMENTS:panic end
end

def clamp[.Number](arg)
  ?arg :match {
      [?{ from to }]: do;
        self < arg:from and arg:from or
        self > arg:to   and arg:to   or
        self
      end
  } do; .INVALID_ARGUMENTS:panic end
end
