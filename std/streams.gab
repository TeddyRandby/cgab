:use .any

def for[](msg, *p, cb)
  *args, s = self:(msg)(p:splat)

  s:is? .Suspense and loop
      cb(args:splat)            
      *args, s = s()
  until not s:is? .Suspense end
end

def first[](msg, *p, cb)
  *args, s = self:(msg)(p:splat)

  s:is? .Suspense and loop
      res, *vals = cb(args:splat)
      res == .some and return res, vals:splat

      *args, s = s()
  until not s:is? .Suspense end

  .none
end

def fold[](msg, *p, init, cb)
  acc, *args, s = init, self:(msg)(p:splat)

  s:is? .Suspense and loop
      acc = cb(acc, args:splat)            
      *args, s = s()
  until not s:is? .Suspense end

  acc
end
