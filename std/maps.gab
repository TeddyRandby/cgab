:use 'map'

def [][.Map](key)
  _, val = self:at(key)

  val
end

def [=][.Map](key, value); self:put!(key, value); end

def has[.Map](key); self:at(key) == .some; end

def del[.Map](key); self:put!(key, nil); end

def each[.Map]
  key = self:next

  loop
    yield key, self:at(key)
    key = self:next(key)
  until key == nil end
end

def keys[.Map]
  key = self:next

  loop
    yield key
    key = self:next(key)
  until key == nil end
end
