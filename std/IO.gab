'symbol':require
'fiber':require

def io = 'io':require

def read[.IO](path, config)
    return :fiber do
        status, fd = io:open(path, 'r') in match
           .ok => return fd:read end
           else => return status end
    end
end

def write[.IO](path, data, config)
    return :fiber do
        status, fd = io:open(path, 'w') in match
           .ok => return fd:write(data) end
           else => return status end
    end
end

:symbol('IO')
