'map':require

impl .Map
    def [] (key)
      status, value = self:at(key) in match
        .some => value end
        else => nil end
    end

    def [=] (key, value); self:put!(key, value) end

    def has(key); not self:at(key) == .some end

    def del(key); self:put!(key, nil) end

    def each
      key = self:next

      loop
        yield key, self:at(key)
        key = self:next(key)
      until key == nil end
    end
end
