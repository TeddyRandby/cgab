# How to handle situations where we want early returns?

# Smalltalk does this with non-local returns. This way, blocks can return for the whole message send.

# I could do the same thing, but I"m not a *huge* fan of it

{
  [?value == .gab.list] ==> return false, self, value,
  .else ==> value:for(&:pairs), do (k, v)
    spec:spec.fits?(v) or return false, self, value, k
  end
}:cond

?value == .gab.list :and (self, value) =>
  value:first(&:pairs) do (k, v)
    spec:spec.fits?(v) :and (.some, false, self, v, k) => .none
  end :unwrap_or(true, self, value)
