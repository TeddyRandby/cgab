'core' :use
'records':use
'numbers' :use

record = [1,2,3]

iter = .gab.iterator (record, \values)

td = .td:compose (
 .td:map do x; '{x}' end,
 .td:interpose ',',
)

iter:transduce('', \+, td):print

#10:tap(\upto, .nil, \self, \print)

iter = .gab.iterator (10, \upto)

sum = iter:reduce(0, \+)
'reduce iter with \+: {sum}':print

td = .td:take 4


#.gab.iterator (10, \upto) :reduce (.nil, \print)

tditer = .gab.iterator (10, \upto, 0, td \+)
tditer:reduce(.nil, \print)
