s = 'specs':use

\string? :def! .false
\string? :def! ('string' .true)

.http.status :defspec! {
  \help "The http status code"
  \spec \string?
}

.http.method :defspec! {
  \help "The http method of a request"
  \spec s:any('GET' 'PUT' 'PATCH' 'DEL')
}

.http.headers :defspec! {
  \help "The headers of an http req/res"
  \spec s *(.header \string?)
}

spec = s:cat(
  .status  .http.status
  .method  .http.method)

req = '200\nGET'

[req:split '\n']:println

spec:spec.fits?(req:split '\n') :println

spec = s:cat(
  .status  .http.status
  .method  .http.method
  .headers .http.headers)

req = '200\nGET\nContent-Length:10'

spec:spec.fits?(req:split '\n') :println

spec = s:cat(
  .status  \string?
  .method  s:any('GET' 'PUT' 'PATCH' 'DEL')
  .headers s +(.header \string?)
  .empty_header ''
  .body    \string?)

req = '200\nGET\nContent-Length:10\nContent-Length:10\n\nHelloWorld'

[req:split '\n']:println

spec:spec.fits?(req:split '\n') :println
