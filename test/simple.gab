s = 'specs':use

\string? :def! .false
\string? :def! ('string' .true)

.http.status :defspec! {
  \help "The http status code"
  \spec \string?
}

.http.method :defspec! {
  \help "The http method of a request"
  \spec s:any('GET' 'PUT' 'PATCH' 'DEL')
}

.http.header :defspec! {
  \help "A single header"
  \spec s:pat(
    .name s:*(\string?)
    .colon ':'
    .value s:*(\string?)
    .end '\n')
}

.http.headers :defspec! {
  \help "The headers of an http req/res"
  \spec s:*(.http.header)
}

.http.body :defspec! {
  \help "The body of an HTTP req/res"
  \spec s:*(\string?)
}

spec = s:cat(
  .status  .http.status
  .method  .http.method
  .body    .http.body)

#spec:re.into:println

req = '200\nGET\nHelloWorld\nTest'

#spec:spec.fits?(req:split '\n') :println # => true

.http.header:spec.into:spec.fits? ("ContentLength:10\n") :println

.test_repeat :defspec! {
  \help "Simple test of repeat regex"
  \spec s:cat(
    .his s:*(\string?)
    .test  'hi'
    .a  'hi'
  )
}

.test_repeat:spec.into:spec.fits?('hi' 'hi' 'hi' 'hi'):println
