s = 'specs':use

#spec = s:cat(
#  .status .ok
#  .result s:any(1 2))
#
#spec:println
#
#spec:spec.fits?(.ok 2):println
\string? :def! .false
\string? :def! ('string' .true)

spec = s:cat(
  .status  s:any(.ok .err)
  .results s:*(.result \string?)
  .final   'hi')

spec:spec.fits?(.ok '1' '2' 'a' 'hi'):println

spec = s:cat(
  .status  \string?
  .method  s:any('GET' 'PUT' 'PATCH' 'DEL'))

req = '200\nGET'

[req:split '\n']:println

spec:spec.fits?(req:split '\n') :println

spec = s:cat(
  .status  \string?
  .method  s:any('GET' 'PUT' 'PATCH' 'DEL')
  .headers s *(.header \string?))

req = '200\nGET\nContent-Length:10'

spec:spec.fits?(req:split '\n') :println

spec = s:cat(
  .status  \string?
  .method  s:any('GET' 'PUT' 'PATCH' 'DEL')
  .headers s +(.header \string?)
  .empty_header ''
  .body    \string?)

req = '200\nGET\nContent-Length:10\nContent-Length:10\n\nHelloWorld'

[req:split '\n']:println

spec:spec.fits?(req:split '\n') :println
