'core' :use
'records':use
'numbers' :use

record = [1,2,3]

.gab.iterator (10, \upto) :reduce(.nil, \print)

iter = .gab.iterator (record, \pairs)

iter:reduce(.nil, \print)

td = .td:compose (
 .td:map do x, y; '{x}: {y}' end,
 .td:interpose ',',
)

iter:transduce('', \+, td):print

iter = .gab.iterator (10, \upto)

sum = iter:reduce(0, \+)
'reduce iter with \+: {sum}':print

td = .td:take 4

tditer = .gab.iterator (10, \upto, 0, td \+)
tditer:reduce(.nil, \print)
