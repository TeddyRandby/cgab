log = 'gab.lsp/logs':use

diag.jobs.in = .channel()

diag.job.t = .shape:make(\server \uri \text)
lsp.server.t = .shape:make(\server.in \server.out \server.data)

\diagnostics.queue_all:def!(
  lsp.server.t
  do
    server = self

    server :server.data :each (uri text) => do
      log:("Queing Diagnostics" uri)
      diag.jobs.in <! diag.job.t:make(server uri text)        
    end
  end)

[diag.job.t] :defmodule! {
  \notify.diagnostics! diagnostics => do
    (self:server, "textDocument/publishDiagnostics") :notify! {
      "uri" self:uri
      "diagnostics" diagnostics
    }
  end
  \diag.check () => do
    text = self:text
    []
  end
  \complete! () => do
    log:("Diagnostics" self)
    diagnostics = self:diag.check

    self:notify.diagnostics! diagnostics
  end
}

diag.worker = do
  diag.jobs.in :each \complete!
end

.fiber :make diag.worker
